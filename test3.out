00400000: <main> ; <input:8> main:
00400000: 8c000000 ; <input:14> lw $s0, x # Reg $s0 = x
00400004: 8c000000 ; <input:15> lw $s1, y # Reg $s1 = y
00400008: 00102020 ; <input:18> move $a0, $s0 # Argument 1: x ($s0)
0040000c: 0c100011 ; <input:19> jal fun # Save current PC in $ra, and jump to fun
00400010: 00028820 ; <input:20> move $s1,$v0 # Return value saved in $v0. This is y ($s1)
00400014: 20020004 ; <input:23> li $v0, 4 # print_string syscall code = 4
00400018: 240400c0 ; <input:24> la $a0, msg1
0040001c: 00042400 ; <input:24> la $a0, msg1
00400020: 24840000 ; <input:24> la $a0, msg1
00400024: 0000000c ; <input:25> syscall
; UNRECOGNIZED INSTRUCTION ; <input:28> li $v0,1 # print_int syscall code = 1
00400028: 00112020 ; <input:29> move $a0, $s1 # Load integer to print in $a0
0040002c: 0000000c ; <input:30> syscall
; UNRECOGNIZED INSTRUCTION ; <input:33> li $v0,4 # print_string syscall code = 4
00400030: 240400c0 ; <input:34> la $a0, lf
00400034: 00042400 ; <input:34> la $a0, lf
00400038: 24840004 ; <input:34> la $a0, lf
0040003c: 0000000c ; <input:35> syscall
; UNRECOGNIZED INSTRUCTION ; <input:38> li $v0,10 # exit
00400040: 0000000c ; <input:39> syscall
00400044: <fun> ; <input:49> fun: # Do the function math
00400044: 20100003 ; <input:50> li $s0, 3
; UNRECOGNIZED INSTRUCTION ; <input:51> mul $s1,$s0,$a0 # s1 = 3*$a0 (i.e. 3*a)
00400048: 20000000 ; <input:52> addi $s1,$s1,5 # 3*a+5
0040004c: 00111020 ; <input:55> move $v0,$s1
00400050: 03e00008 ; <input:58> jr $ra # Jump to addr stored in $ra
; UNRECOGNIZED INSTRUCTION ; <input:63> x: .word 5
; UNRECOGNIZED INSTRUCTION ; <input:64> y: .word 0
;
; DATA IN MEMORY
; msg1
00c00000: 793d0000 ; y=
; lf
00c00004: 0a000000 ; \n